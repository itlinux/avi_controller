# Author Remo Mattei
# Email: rm@rm.ht
---
- hosts: localhost
  gather_facts: no
  collections:
    - vmware.alb
  connection: local
  vars:
    usable_networks: []
    create_dns_provider: "{{ (dns_config.service_domains|default([]))|length>0 }}"

  tasks:
    - name: "Create Avi IPAM Provider"
      vmware.alb.avi_ipamdnsproviderprofile:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "IPAM_Avi"
        type: "IPAMDNS_TYPE_INTERNAL"
        allocate_ip_in_vrf: false
      register: ipamprovider

    - name: "Create Avi DNS Provider"
      vmware.alb.avi_ipamdnsproviderprofile:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "DNS_Avi"
        type: IPAMDNS_TYPE_INTERNAL_DNS
        internal_profile:
          dns_service_domain: "remo.local"
      when: create_dns_provider

    - name: "Configure vSphere Cloud"
      vmware.alb.avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        name: "{{ vcenter.AviCloudName }}"
        vcenter_configuration:
          datacenter: "{{ vcenter.datacenter }}"
          privilege: "WRITE_ACCESS"
          username: "{{ vcenter.username }}"
          password: "{{ vcenter.password }}"
          vcenter_url: "{{ vcenter.vcenter_url }}"
          use_content_lib: "{{ cloud_config.use_content_lib | default(False) }}"
          content_lib: "{{ cloud_config.content_lib | default(omit) }}"
        vtype: "CLOUD_VCENTER"
        ipam_provider_ref: "{{ ipamprovider.obj.url }}"
        dns_provider_ref: '{{ "/api/ipamdnsproviderprofile/?name=VMware-DNS-" + cloud_parameters.name if create_dns_provider else None }}'
      register: cloud

    - name: "Wait for network sync for cloud to complete..."
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "get"
        path: "cloudruntime"
        params:
          name: "{{ vcenter.AviCloudName }}"
      register: cloudruntime
      until: cloudruntime.obj.results[0].network_sync_complete
      retries: 30
      delay: 5

    - name: "Configure cloud management network"
      vmware.alb.avi_cloud:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        avi_api_update_method: "patch"
        avi_api_patch_op: "replace"
        name: "{{ vcenter.AviCloudName }}"
        vcenter_configuration:
          management_ip_subnet: "{{ management_ip_subnet }}"
          management_network: '{{ "/api/vimgrnwruntime/?name=" + mgmt_network }}'
        vtype: "CLOUD_VCENTER"
      tags:
        - net
